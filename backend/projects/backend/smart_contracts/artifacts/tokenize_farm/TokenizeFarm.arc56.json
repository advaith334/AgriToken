{
    "name": "TokenizeFarm",
    "structs": {},
    "methods": [
        {
            "name": "initialize_farm",
            "args": [
                {
                    "type": "string",
                    "name": "farm_name"
                },
                {
                    "type": "uint64",
                    "name": "asset_id"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Initialize the farm tokenization with farm data and asset information",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_farm_name",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Get farm name",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_asset_id",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Get asset ID",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_total_minted",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Get total tokens minted",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_owner",
            "args": [],
            "returns": {
                "type": "address"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Get contract owner",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "update_farm_name",
            "args": [
                {
                    "type": "string",
                    "name": "new_farm_name"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Update farm name (only owner)",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "hello",
            "args": [
                {
                    "type": "string",
                    "name": "name"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Legacy hello method for testing",
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 3,
                "bytes": 2
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "farm_name": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "ZmFybV9uYW1l"
                },
                "asset_id": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "YXNzZXRfaWQ="
                },
                "total_tokens_minted": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "dG90YWxfdG9rZW5zX21pbnRlZA=="
                },
                "is_initialized": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "aXNfaW5pdGlhbGl6ZWQ="
                },
                "owner": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "b3duZXI="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        322
                    ],
                    "errorMessage": "Farm already initialized"
                },
                {
                    "pc": [
                        392,
                        402,
                        413,
                        424,
                        437
                    ],
                    "errorMessage": "Farm not initialized"
                },
                {
                    "pc": [
                        138,
                        168,
                        198,
                        214,
                        231,
                        248,
                        272
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        445
                    ],
                    "errorMessage": "Only owner can update farm name"
                },
                {
                    "pc": [
                        311
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        141,
                        171,
                        201,
                        217,
                        234,
                        251,
                        275
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        407
                    ],
                    "errorMessage": "check self.asset_id exists"
                },
                {
                    "pc": [
                        396
                    ],
                    "errorMessage": "check self.farm_name exists"
                },
                {
                    "pc": [
                        320,
                        391,
                        401,
                        412,
                        423,
                        436
                    ],
                    "errorMessage": "check self.is_initialized exists"
                },
                {
                    "pc": [
                        428,
                        443
                    ],
                    "errorMessage": "check self.owner exists"
                },
                {
                    "pc": [
                        418
                    ],
                    "errorMessage": "check self.total_tokens_minted exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiACAAEmBgQVH3x1DmlzX2luaXRpYWxpemVkCWZhcm1fbmFtZQVvd25lcghhc3NldF9pZBN0b3RhbF90b2tlbnNfbWludGVkMRtBAOKCBwSCu0l5BOR3PZ4EW6IqhAQi5MWgBP8rpcUEVfDTjQQCvs4RNhoAjgcAiABwAF8ATgA+ACAAAiJDMRkURDEYRDYaAVcCAIgBTEkVFlcGAkxQKExQsCNDMRkURDEYRDYaAVcCAIgA+UkVFlcGAkxQKExQsCNDMRkURDEYRIgA1yhMULAjQzEZFEQxGESIALwWKExQsCNDMRkURDEYRIgAoBYoTFCwI0MxGRREMRhEiACFSRUWVwYCTFAoTFCwI0MxGRREMRhENhoBVwIANhoCF4gAGUkVFlcGAkxQKExQsCNDMRlA/1ExGBREI0OKAgEiKWVEFEQqi/5nJwSL/2crMQBnKSNnJwUiZ4AqRmFybSB0b2tlbml6YXRpb24gaW5pdGlhbGl6ZWQgc3VjY2Vzc2Z1bGx5iSIpZUREIiplRIkiKWVERCInBGVEiSIpZUREIicFZUSJIillREQiK2VEiYoBASIpZUREMQAiK2VEEkQqi/9ngB5GYXJtIG5hbWUgdXBkYXRlZCBzdWNjZXNzZnVsbHmJigEBgAdIZWxsbywgi/9QiQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 10,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}