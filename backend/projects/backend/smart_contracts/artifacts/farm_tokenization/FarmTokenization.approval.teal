#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    // smart_contracts/farm_tokenization/contract.py:4
    // class FarmTokenization(ARC4Contract):
    txn NumAppArgs
    bz main_bare_routing@7
    pushbytess 0x2713dd3b 0xb2195943 // method "tokenize_farm(string,uint64,string)string", method "get_farm_info()string"
    txna ApplicationArgs 0
    match main_tokenize_farm_route@3 main_get_farm_info_route@4

main_after_if_else@11:
    // smart_contracts/farm_tokenization/contract.py:4
    // class FarmTokenization(ARC4Contract):
    pushint 0 // 0
    return

main_get_farm_info_route@4:
    // smart_contracts/farm_tokenization/contract.py:14-15
    // # get farm info
    // @abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    pushbytes 0x151f7c7500354661726d20546f6b656e697a6174696f6e20436f6e7472616374202d20526561647920666f72206173736574206372656174696f6e
    log
    pushint 1 // 1
    return

main_tokenize_farm_route@3:
    // smart_contracts/farm_tokenization/contract.py:6-7
    // # tokenization of farm asset
    // @abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // smart_contracts/farm_tokenization/contract.py:4
    // class FarmTokenization(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    // smart_contracts/farm_tokenization/contract.py:6-7
    // # tokenization of farm asset
    // @abimethod()
    dup
    len
    itob
    extract 6 2
    swap
    concat
    pushbytes 0x151f7c75
    swap
    concat
    log
    pushint 1 // 1
    return

main_bare_routing@7:
    // smart_contracts/farm_tokenization/contract.py:4
    // class FarmTokenization(ARC4Contract):
    txn OnCompletion
    bnz main_after_if_else@11
    txn ApplicationID
    !
    assert // can only call when creating
    pushint 1 // 1
    return
